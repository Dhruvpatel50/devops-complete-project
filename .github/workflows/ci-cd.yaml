name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev-fix ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Frontend Dependencies
        run: |
          npm install --legacy-peer-deps
          npm install react-router-dom @testing-library/react @testing-library/jest-dom --save
      
      - name: Run Frontend Tests
        env:
          CI: true
        run: |
          npm test -- --passWithNoTests --watchAll=false

  deploy-frontend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev-fix'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm install --legacy-peer-deps
      
      - name: Build Frontend
        env:
          REACT_APP_AUTH_API: https://auth-service-skillswapper.onrender.com
          REACT_APP_USER_API: https://user-service-skillswapper.onrender.com
          REACT_APP_SWAP_API: https://swap-service-skillswapper.onrender.com
          REACT_APP_MESSAGE_API: https://feedback-service-2rtd.onrender.com
          REACT_APP_FRONTEND_URL: https://devops-complete-project.vercel.app
        run: npm run build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  notify:
    needs: [deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Deployment Status
        run: |
          if [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi